exit
User.get(:sign_in)
Hello.where(remote_id: 1)
TimeEntry.get(:index)
User.get(:sign_in)
exit
Hello.find_by_id 1
Hello.find_by_remote_id 1
exit
Hello.where(remote_id: 1).first
User.get(:sign_in"
ModelSync::Base.columns
User.get(:sign_in)
exit
exit
Hello.where(remote_id: 1)
Hello.where(remote_id: 1).first
Hello.all
Hello.all.first
Hello.create(name: "test")
Hello.all.count
Hello.new(name: "test").save
Hello.all
Hello.all.first
exit
Hello.all
Hello.all.first
Hello.create(name: "test")
Hello.all
Hello.all.first
Hello.where(id: 1).first
Hello.where(id: 2).first
Hello.all.firstex
exit
Hello.all
Hello.to_s
Hello
Hello.new.to_s
exit
Hello.new.to_s
exit
Hello.new.to_s
Hello.new.columns
Hello.new.column_named(:name)
exit
Hello.columns
ModelSync::Base.new.columns
ModelSync::Base.columns
ModelSync::Base.columns
Hello.columns
Hello.columns
ModelSync::Base.columns
Hello.columns
exit
Hello.columns
exit
Hello.columns
Hello.columns
Hello.new.columns
Hello
Hello.new
exit
Hello.new
Hello.new.columns
Hello.columns
exit
Hello.columns
ModelSync::Base.columns
xeit
exit
Hello.fetchIndex
Hello.fetchIndex
Hello.fetchIndex
exi
exit
Hello.fetchIndex
Hello.fetchIndex
exit
TimeEntry.fetchIndex
TimeEntry.fetchIndex
TimeEntry.fetchIndex
exit
exit
User.get(:sign_in)
exit
User
User.get(:sign_in)
User.get(:sign_in)
User.fetchIndex
exit
User.fetch(:sign_in)
exit
User.fetch(:sign_in)
exit
User.fetch(:sign_in)
User.first
exit
exit
ModelSync::NetworkClient.shared_instance
exit
ModelSync::NetworkClient.shared_instance
exit
ModelSync::NetworkClient.shared_instance
exit
ModelSync::NetworkClient.shared_instance
exit
ModelSync::NetworkClient.shared_instance
ModelSync::NetworkClient.shared_instance
exit
TimeEntry.get(:index)
exit
TimeEntry.get(:index)
exit
TimeEntry.get(:index)
TimeEntry.get(:index)
TimeEntry.get(:index)
exit
User.get(:sign_in"
User.get(:sign_in)
exit
exit
User.get(:sign_in)
User.get("users/sign_in")
exit
User.get("users/sign_in")
exit
exit
User.get(:sign_in)
exit
User.get(:sign_in)
User.get(1)
exit
User.get(:sign_in)
exit
User.get(:sign_in)
User.get(:sign_in)
exit
User.get(:sign_in)
exit
User.get(:sign_in)
exit
User.get(:sign_in)
exit
exit
exit
User.get(:sign_in)
exit
exit
User.get(:sign_in)
exit
User.get(:sign_in)
exit
User.get(:sign_in)
User.get(:sign_in)
exit
User.get(:sign_in)
exit
exit
User.get(:sign_in)
User.get(:index)
App.alert("HI")
App::Persistence['channels']
App::Persistence['user']
App::Persistence['user'] = ["daniel.green@alliants.co.uk", "123456"]
App::Persistence['user']
exit
App::Persistence['user']
exit
App::Persistence['user']
User.get(:index)
User.get(:sign_in)
exit
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
exit
User.get(:sign_in)
exit
User.all
User.count
User.get(:sign_in)
User.first
User.first.email.present?
nil.present?
User.first.email
exit
User.first.email
User.get(:sign_in)
App::Persistence['csrf'] = "abc"
App::Persistence['csrf']
exit
App::Persistence['csrf']
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
User.get(:sign_in)
exit
User.get(:sign_in)
App::Persistence['csrf']
{"X-Csrf-Token"=>"abc"}.keys
{"X-Csrf-Token"=>"abc"}.keys.include? "X-Csrf-Token"
exoit
exit
User.get(:sign_in)
exit
User.get(:sign_in)
{"X-Csrf-Token"=>"abc"}.include? "X-Csrf-Token"
exit
{"X-Csrf-Token"=>"abc"}.include? "X-Csrf-Token"
User.get(:sign_in)
App::Persistence['csrf']
User.get(:sign_in)
exit
User.get(:sign_in)
exit
User.get(:sign_in)
exit
User.get(:sign_in)
exit
User.get(:sign_in)
User.get(:sign_in)
exit
exit
exit
exit
cc
c
c
exit
exit
"E6E6E6".to_c
"#############################################################################################################################################################################################################################################################################################################################################E6E6E6".to_c
"#E6E6E6".to_c
"#E6E6E6".to_color
"#E6E6E6".to_color.to_s
"#E6E6E6".to_color
color
backgroundColor
backgroundColor = "#E6E6E6".to_color
backgroundColor = "#E6E6E6".to_color
backgroundColor