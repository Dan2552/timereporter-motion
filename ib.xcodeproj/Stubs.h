// Generated by IB v0.3.1 gem. Do not edit it manually
// Run `rake ib:open` to refresh

#import <Foundation/Foundation.h>
#import <CoreData/CoreData.h>
#import <UIKit/UIKit.h>

@interface ParserError: StandardError







@end


@interface NSNotificationCenter





-(IBAction) observers;
-(IBAction) unobserve:(id) observer;

@end


@interface NSURLRequest





-(IBAction) to_s;

@end


@interface Camera





-(IBAction) initialize:(id) location;
-(IBAction) location;
-(IBAction) imagePickerControllerDidCancel:(id) picker;
-(IBAction) picker;
-(IBAction) dismiss;
-(IBAction) camera_device;
-(IBAction) media_type_to_symbol:(id) media_type;
-(IBAction) symbol_to_media_type:(id) symbol;
-(IBAction) error:(id) type;

@end


@interface UIView





-(IBAction) handle_gesture:(id) recognizer;

@end


@interface UIAlertView





-(IBAction) style;
-(IBAction) cancel_button_index;

@end


@interface ClickedButton





-(IBAction) willPresentAlertView:(id) alert;
-(IBAction) didPresentAlertView:(id) alert;
-(IBAction) alertViewCancel:(id) alert;
-(IBAction) alertViewShouldEnableFirstOtherButton:(id) alert;
-(IBAction) plain_text_field;
-(IBAction) secure_text_field;
-(IBAction) login_text_field;
-(IBAction) password_text_field;

@end


@interface UIViewController





-(IBAction) content_frame;

@end


@interface InvalidURLError: StandardError







@end


@interface InvalidFileError: StandardError







@end


@interface BubbleWrap





-(IBAction) to_s;
-(IBAction) connectionDidFinishLoading:(id) connection;
-(IBAction) show_status_indicator:(id) show;
-(IBAction) create_request;
-(IBAction) set_content_type;
-(IBAction) create_request_body;
-(IBAction) append_payload:(id) body;
-(IBAction) append_form_params:(id) body;
-(IBAction) append_auth_header;
-(IBAction) append_files:(id) body;
-(IBAction) append_body_boundary:(id) body;
-(IBAction) create_url:(id) url_string;
-(IBAction) validate_url:(id) url;
-(IBAction) escape:(id) string;
-(IBAction) convert_payload_to_url;
-(IBAction) log:(id) message;
-(IBAction) escape_line_feeds:(id) hash;
-(IBAction) patch_nsurl_request:(id) request;
-(IBAction) call_delegator_with_response;

@end


@interface BubbleWrap





-(IBAction) initialize:(id) values;
-(IBAction) update:(id) values;
-(IBAction) to_s;
-(IBAction) update_status_description;

@end


@interface Array





-(IBAction) reverse_each;

@end


@interface Date





-(IBAction) to_s;
-(IBAction) to_date;
-(IBAction) to_time;

@end


@interface Time





-(IBAction) to_date;
-(IBAction) to_time;

@end


@interface Callback





-(IBAction) name;
-(IBAction) next_id;
-(IBAction) apply:(id) code;
-(IBAction) compile;
-(IBAction) append_one:(id) callback;
-(IBAction) prepend_one:(id) callback;
-(IBAction) remove_duplicates:(id) callback;

@end


@interface CallbackChain: Array





-(IBAction) compile;
-(IBAction) append_one:(id) callback;
-(IBAction) prepend_one:(id) callback;
-(IBAction) remove_duplicates:(id) callback;
-(IBAction) reset_callbacks:(id) symbol;

@end


@interface Array





-(IBAction) from:(id) position;
-(IBAction) to:(id) position;
-(IBAction) second;

@end


@interface Array





-(IBAction) to_sentence:(id) options;
-(IBAction) to_formatted_s:(id) format;

@end


@interface Date





-(IBAction) beginning_of_week;
-(IBAction) yesterday;
-(IBAction) tomorrow;
-(IBAction) current;
-(IBAction) ago:(id) seconds;
-(IBAction) since:(id) seconds;
-(IBAction) beginning_of_day;
-(IBAction) end_of_day;
-(IBAction) plus_with_duration:(id) other;
-(IBAction) minus_with_duration:(id) other;
-(IBAction) advance:(id) options;
-(IBAction) change:(id) options;

@end


@interface Date





-(IBAction) to_formatted_s:(id) format;
-(IBAction) readable_inspect;

@end


@interface Range





-(IBAction) sum:(id) identity;

@end


@interface Hash





-(IBAction) with_indifferent_access;

@end


@interface Hash





-(IBAction) transform_keys;
-(IBAction) stringify_keys;
-(IBAction) symbolize_keys;
-(IBAction) deep_stringify_keys;
-(IBAction) deep_symbolize_keys;

@end


@interface Hash





-(IBAction) reverse_merge:(id) other_hash;

@end


@interface Integer





-(IBAction) ordinalize;
-(IBAction) ordinal;

@end


@interface Integer





-(IBAction) months;
-(IBAction) years;

@end


@interface Object





-(IBAction) metaclass;

@end


@interface Module





-(IBAction) attr_internal_ivar_name:(id) attr;

@end


@interface Module





-(IBAction) parent_name;
-(IBAction) parent;
-(IBAction) parents;
-(IBAction) local_constants;

@end


@interface Module





-(IBAction) remove_possible_method:(id) method;

@end


@interface NSDictionary





-(IBAction) to_hash;

@end


@interface NSString





-(IBAction) to_s;

@end


@interface Numeric





-(IBAction) bytes;
-(IBAction) kilobytes;
-(IBAction) megabytes;
-(IBAction) gigabytes;
-(IBAction) terabytes;
-(IBAction) petabytes;
-(IBAction) exabytes;

@end


@interface Numeric





-(IBAction) to_json;

@end


@interface Numeric





-(IBAction) seconds;
-(IBAction) minutes;
-(IBAction) hours;
-(IBAction) days;
-(IBAction) weeks;
-(IBAction) fortnights;
-(IBAction) ago:(id) time;
-(IBAction) since:(id) time;

@end


@interface Object





-(IBAction) presence;

@end


@interface Object





-(IBAction) deep_dup;

@end


@interface Array





-(IBAction) deep_dup;

@end


@interface Hash





-(IBAction) deep_dup;

@end


@interface Object





-(IBAction) instance_values;
-(IBAction) instance_variable_names;

@end


@interface Object





-(IBAction) to_param;

@end


@interface NilClass





-(IBAction) to_param;

@end


@interface TrueClass





-(IBAction) to_param;

@end


@interface FalseClass





-(IBAction) to_param;

@end


@interface Array





-(IBAction) to_param;

@end


@interface Hash





-(IBAction) to_param:(id) namespace;

@end


@interface Object





-(IBAction) to_query:(id) key;

@end


@interface Array





-(IBAction) to_query:(id) key;

@end


@interface String





-(IBAction) at:(id) position;
-(IBAction) from:(id) position;
-(IBAction) to:(id) position;
-(IBAction) first:(id) limit;
-(IBAction) last:(id) limit;

@end


@interface String





-(IBAction) squish;

@end


@interface String





-(IBAction) pluralize:(id) count;
-(IBAction) singularize;
-(IBAction) constantize;
-(IBAction) safe_constantize;
-(IBAction) camelize:(id) first_letter;
-(IBAction) titleize;
-(IBAction) underscore;
-(IBAction) dasherize;
-(IBAction) demodulize;
-(IBAction) deconstantize;
-(IBAction) tableize;
-(IBAction) classify;
-(IBAction) humanize;
-(IBAction) foreign_key:(id) separate_class_name_and_id_with_underscore;

@end


@interface String





-(IBAction) strip_heredoc;

@end


@interface Time





-(IBAction) current;
-(IBAction) seconds_since_midnight;
-(IBAction) seconds_until_end_of_day;
-(IBAction) change:(id) options;
-(IBAction) advance:(id) options;
-(IBAction) ago:(id) seconds;
-(IBAction) since:(id) seconds;
-(IBAction) beginning_of_day;
-(IBAction) end_of_day;
-(IBAction) beginning_of_hour;
-(IBAction) end_of_hour;
-(IBAction) beginning_of_minute;
-(IBAction) end_of_minute;
-(IBAction) all_day;
-(IBAction) all_week:(id) start_day;
-(IBAction) all_month;
-(IBAction) all_quarter;
-(IBAction) all_year;
-(IBAction) plus_with_duration:(id) other;
-(IBAction) minus_with_duration:(id) other;
-(IBAction) compare_with_coercion:(id) other;

@end


@interface Time





-(IBAction) to_formatted_s:(id) format;

@end


@interface Duration: BasicObject





-(IBAction) since:(id) time;
-(IBAction) ago:(id) time;
-(IBAction) inspect;
-(IBAction) as_json:(id) options;

@end


@interface HashWithIndifferentAccess: Hash





-(IBAction) with_indifferent_access;
-(IBAction) nested_under_indifferent_access;
-(IBAction) initialize:(id) constructor;
-(IBAction) default:(id) key;
-(IBAction) update:(id) other_hash;
-(IBAction) dup;
-(IBAction) reverse_merge:(id) other_hash;
-(IBAction) replace:(id) other_hash;
-(IBAction) delete:(id) key;
-(IBAction) to_hash;
-(IBAction) convert_key:(id) key;
-(IBAction) convert_value:(id) value;

@end


@interface Inflections





-(IBAction) initialize;
-(IBAction) initialize_dup:(id) orig;
-(IBAction) acronym:(id) word;
-(IBAction) clear:(id) scope;
-(IBAction) inflections;

@end


@interface NullLogger





-(IBAction) log:(id) string;

@end


@interface StdoutLogger





-(IBAction) log:(id) string;

@end


@interface NetworkLogger





-(IBAction) log:(id) string;

@end


@interface String





-(IBAction) to_date;
-(IBAction) to_timezone;
-(IBAction) to_duration;

@end


@interface Debug





-(IBAction) deep_const_get:(id) const;

@end


@interface Module





-(IBAction) deep_const_get:(id) const;

@end


@interface ModelNotSetError: RuntimeError







@end


@interface FieldBindingMap





-(IBAction) initialize:(id) options;
-(IBAction) model:(id) model_instance;
-(IBAction) field_count;
-(IBAction) field_at:(id) index;
-(IBAction) value_at:(id) field;
-(IBAction) fields;
-(IBAction) bind;
-(IBAction) textFieldShouldReturn:(id) textField;
-(IBAction) handle_keyboard_will_show:(id) notification;
-(IBAction) owner_cell_index_path;
-(IBAction) handle_keyboard_will_hide:(id) notification;
-(IBAction) find_first_responder:(id) parent;

@end


@interface Store





-(IBAction) initialize:(id) db_adapter;

@end


@interface ValidationSpecificationError: RuntimeError







@end


@interface RecordInvalid: RuntimeError





-(IBAction) validations;
-(IBAction) do_insert:(id) options;
-(IBAction) do_update:(id) options;
-(IBAction) error_messages;
-(IBAction) error_messages_for:(id) field;
-(IBAction) validate_each:(id) validations;
-(IBAction) validation_method:(id) validation_type;
-(IBAction) each_validation_for:(id) field;

@end


@interface Column





-(IBAction) class_name;
-(IBAction) primary_key;
-(IBAction) foreign_name;
-(IBAction) foreign_polymorphic_type;
-(IBAction) foreign_key;
-(IBAction) classify;
-(IBAction) class_const_get;
-(IBAction) through_class;
-(IBAction) inverse_foreign_key;
-(IBAction) inverse_name;
-(IBAction) inverse_column;

@end


@interface PersistFileError: Exception





-(IBAction) new:(id) options;

@end


@interface RelationIsNilError: Exception





-(IBAction) new:(id) options;

@end


@interface AdapterNotFoundError: Exception





-(IBAction) new:(id) options;

@end


@interface RecordNotSaved: Exception





-(IBAction) new:(id) options;
-(IBAction) column_type:(id) col;
-(IBAction) column:(id) col;
-(IBAction) has_many_columns;
-(IBAction) has_one_columns;
-(IBAction) belongs_to_columns;
-(IBAction) association_columns;
-(IBAction) default:(id) col;
-(IBAction) read:(id) attrs;
-(IBAction) create:(id) options;
-(IBAction) destroy_all;
-(IBAction) config;
-(IBAction) column_from_hash:(id) hash;
-(IBAction) column_from_string_or_sym:(id) string;
-(IBAction) define_belongs_to_methods:(id) name;
-(IBAction) define_has_many_methods:(id) name;
-(IBAction) define_has_one_methods:(id) name;
-(IBAction) column_as:(id) col;
-(IBAction) define_hook_methods:(id) name;
-(IBAction) initialize:(id) options;
-(IBAction) object_identifier;
-(IBAction) model_identifier;
-(IBAction) attributes;
-(IBAction) update_attributes:(id) attrs;
-(IBAction) read_attribute:(id) name;
-(IBAction) to_i;
-(IBAction) inspect;
-(IBAction) to_s;
-(IBAction) save:(id) options;
-(IBAction) save_without_transaction:(id) options;
-(IBAction) set_auto_date_field:(id) field_name;
-(IBAction) hooks:(id) name;
-(IBAction) process_hook:(id) name;
-(IBAction) delete:(id) options;
-(IBAction) destroy:(id) options;
-(IBAction) columns;
-(IBAction) options:(id) col;
-(IBAction) set_dirty;
-(IBAction) get_attr:(id) name;
-(IBAction) get_belongs_to_attr:(id) col;
-(IBAction) get_has_many_attr:(id) col;
-(IBAction) get_has_one_attr:(id) col;
-(IBAction) get_polymorphic_attr:(id) col;
-(IBAction) foreign_column_name:(id) col;
-(IBAction) unload_relation:(id) col;
-(IBAction) issue_notification:(id) info;

@end


@interface Model





-(IBAction) cast_to_bool:(id) arg;
-(IBAction) cast_to_integer:(id) arg;
-(IBAction) cast_to_float:(id) arg;
-(IBAction) cast_to_date:(id) arg;
-(IBAction) cast_to_array:(id) arg;
-(IBAction) cast_to_hash:(id) arg;
-(IBAction) cast_to_string:(id) arg;

@end


@interface BaseDBAdapter





-(IBAction) initialize:(id) options;

@end


@interface SugarCubeNotFoundException: Exception







@end


@interface NSError





-(IBAction) to_s;

@end


@interface NSIndexPath





-(IBAction) to_s;

@end


@interface NSLayoutConstraint





-(IBAction) to_s;

@end


@interface NSNotification





-(IBAction) to_s;
-(IBAction) inspect;

@end


@interface NSSet





-(IBAction) to_s;

@end


@interface NSURL





-(IBAction) to_s;
-(IBAction) inspect;

@end


@interface UIColor





-(IBAction) to_s;
-(IBAction) inspect;

@end


@interface UIEvent





-(IBAction) to_s;

@end


@interface UILabel





-(IBAction) to_s:(id) options;

@end


@interface UITextField





-(IBAction) to_s:(id) options;

@end


@interface UITouch





-(IBAction) to_s;

@end


@interface UIView





-(IBAction) to_s:(id) options;

@end


@interface UIViewController





-(IBAction) to_s;

@end


@interface FMDBAdapter: SQLite3Adapter







@end


@interface Transaction





-(IBAction) initialize:(id) db;
-(IBAction) execute_sql:(id) sql;
-(IBAction) begin_transaction;
-(IBAction) end_transaction;
-(IBAction) commit;
-(IBAction) commit_writes;
-(IBAction) rollback;
-(IBAction) db_path;
-(IBAction) db;
-(IBAction) thread_dictionary;

@end


@interface Join





-(IBAction) joined_table_name;
-(IBAction) joining_table_name;
-(IBAction) joined_table_key;
-(IBAction) joined_table_type;
-(IBAction) joining_table_key;
-(IBAction) joined_class;
-(IBAction) type;
-(IBAction) on_str;
-(IBAction) build_on_str;
-(IBAction) to_sql_str;
-(IBAction) select:(id) scope;

@end


@interface AbstractRelation





-(IBAction) scoped;
-(IBAction) column_name;
-(IBAction) keys_for_to_s;
-(IBAction) unload;
-(IBAction) maybe_reload;
-(IBAction) build_from_instance:(id) associated_instance;
-(IBAction) set_inverse_association:(id) instance;

@end


@interface CollectionRelation: AbstractRelation





-(IBAction) collection_push:(id) instance;
-(IBAction) build:(id) attrs;
-(IBAction) create:(id) attrs;
-(IBAction) to_a;
-(IBAction) count;
-(IBAction) first;
-(IBAction) loaded;

@end


@interface RelationArray





-(IBAction) collection_push:(id) instance;
-(IBAction) build:(id) attrs;
-(IBAction) create:(id) attrs;
-(IBAction) to_a;
-(IBAction) count;
-(IBAction) first;
-(IBAction) loaded;
-(IBAction) delete:(id) instance;
-(IBAction) unload;
-(IBAction) reload;
-(IBAction) collection;
-(IBAction) instance;

@end


@interface InstanceRelation: AbstractRelation





-(IBAction) build:(id) attrs;
-(IBAction) instance;
-(IBAction) loaded;
-(IBAction) unload;
-(IBAction) reload;

@end


@interface SQLCondition





-(IBAction) to_sql_str;

@end


@interface SQLContext





-(IBAction) to_s;
-(IBAction) execute;

@end


@interface SQLDBAdapter: BaseDBAdapter





-(IBAction) to_select_sql:(id) scope;
-(IBAction) to_delete_sql:(id) scope;

@end


@interface SQLScope





-(IBAction) deep_clone;
-(IBAction) table_name;
-(IBAction) order:(id) options;
-(IBAction) group:(id) column;
-(IBAction) limit:(id) limit;
-(IBAction) all;
-(IBAction) to_a;
-(IBAction) reload;
-(IBAction) fetch_row_attrs;
-(IBAction) do_select;
-(IBAction) first;
-(IBAction) last;
-(IBAction) count;
-(IBAction) delete;
-(IBAction) to_sql;
-(IBAction) to_sql_sq;
-(IBAction) execute;
-(IBAction) select_str;
-(IBAction) joins_str;
-(IBAction) order_str;
-(IBAction) group_str;
-(IBAction) limit_str;
-(IBAction) options_str;
-(IBAction) type;

@end


@interface SQLite3Adapter: SQLDBAdapter





-(IBAction) last_insert_row_id;

@end


@interface AppDelegate





-(IBAction) setup_sync;
-(IBAction) setup_database;
-(IBAction) setup_window;

@end


@interface BaseViewController: UIViewController







@end


@interface LeftMenuController: BaseViewController







@end


@interface TimeEntriesController: BaseViewController

@property IBOutlet id calendar_view;
@property IBOutlet id date_navigation_bar;



-(IBAction) viewDidAppear:(id) animated;
-(IBAction) back_pressed;
-(IBAction) forward_pressed;
-(IBAction) update_date_label;
-(IBAction) refresh_time_entries;
-(IBAction) render_entries;
-(IBAction) menu_button_pressed;

@end


@interface UserController: UIViewController

@property IBOutlet id username_field;
@property IBOutlet id password_field;



-(IBAction) viewDidAppear:(id) animated;
-(IBAction) login:(id) sender;
-(IBAction) load_persisted_credentials;
-(IBAction) save_persisted_credentials;
-(IBAction) segue_to_time_entries;

@end


@interface Base





-(IBAction) to_hash;
-(IBAction) payload;
-(IBAction) relationship:(id) symbol;
-(IBAction) setup_queue;
-(IBAction) queue;
-(IBAction) execute;

@end


@interface NetworkQueue





-(IBAction) setup_queue;
-(IBAction) queue;
-(IBAction) execute;
-(IBAction) unlock_and_continue;
-(IBAction) verbose_count;
-(IBAction) count;
-(IBAction) next_call;
-(IBAction) initialize:(id) params;
-(IBAction) to_s;
-(IBAction) add_to_queue:(id) priority;
-(IBAction) auth_action;
-(IBAction) watch_for_csrf_token;

@end


@interface Network





-(IBAction) initialize:(id) params;
-(IBAction) execute;
-(IBAction) to_s;
-(IBAction) add_to_queue:(id) priority;
-(IBAction) auth_action;
-(IBAction) watch_for_csrf_token;

@end


@interface TimeEntry: ModelSync





-(IBAction) duration_in_hours;
-(IBAction) date;
-(IBAction) start_time;
-(IBAction) end_time;

@end


@interface User: ModelSync







@end


@interface CalendarGridView: UIView





-(IBAction) initWithCoder:(id) coder;
-(IBAction) drawRect:(id) rect;
-(IBAction) set_children:(id) time_entries;
-(IBAction) hour_height:(id) n;
-(IBAction) top_for_date:(id) date;
-(IBAction) grid;
-(IBAction) top_for_hour:(id) hour;
-(IBAction) time_labels;
-(IBAction) half_hour_height;
-(IBAction) grid_left;
-(IBAction) remove_children;

@end


@interface TimeEntryView: UIView





-(IBAction) initWithFrame:(id) frame;
-(IBAction) drawRect:(id) rect;
-(IBAction) project_name;
-(IBAction) update_label;
-(IBAction) back_color;
-(IBAction) border_color;
-(IBAction) text_color;
-(IBAction) text_shadow;

@end



