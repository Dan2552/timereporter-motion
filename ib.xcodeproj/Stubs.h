// Generated by IB v0.2.7 gem. Do not edit it manually
// Run `rake ib:open` to refresh

#import <Foundation/Foundation.h>
#import <CoreData/CoreData.h>
#import <UIKit/UIKit.h>

@interface ValidationSpecificationError: RuntimeError







@end


@interface RecordInvalid: RuntimeError





-(IBAction) validations;
-(IBAction) error_messages;
-(IBAction) error_messages_for:(id) field;
-(IBAction) validate_each:(id) validations;
-(IBAction) validation_method:(id) validation_type;
-(IBAction) each_validation_for:(id) field;

@end


@interface Store





-(IBAction) initialize:(id) db_adapter;

@end


@interface PersistFileError: Exception





-(IBAction) documents_file:(id) file_name;
-(IBAction) initWithCoder:(id) coder;
-(IBAction) encodeWithCoder:(id) coder;

@end


@interface Model





-(IBAction) cast_to_bool:(id) arg;
-(IBAction) cast_to_integer:(id) arg;
-(IBAction) cast_to_float:(id) arg;
-(IBAction) cast_to_date:(id) arg;
-(IBAction) cast_to_array:(id) arg;
-(IBAction) cast_to_string:(id) arg;

@end


@interface PersistFileError: Exception







@end


@interface RelationIsNilError: Exception







@end


@interface AdapterNotFoundError: Exception





-(IBAction) generate_belongs_to_id:(id) relation;
-(IBAction) column_type:(id) column;
-(IBAction) default:(id) column;
-(IBAction) read:(id) attrs;
-(IBAction) destroy_all;
-(IBAction) first;
-(IBAction) last;
-(IBAction) column_from_hash:(id) hash;
-(IBAction) column_from_string_or_sym:(id) string;
-(IBAction) define_accessor_methods:(id) name;
-(IBAction) define_belongs_to_methods:(id) name;
-(IBAction) define_has_many_methods:(id) name;
-(IBAction) column_named:(id) name;
-(IBAction) attributes;
-(IBAction) read_attribute:(id) name;
-(IBAction) to_i;
-(IBAction) to_s;
-(IBAction) set_auto_date_field:(id) field_name;
-(IBAction) delete;
-(IBAction) destroy;
-(IBAction) columns;
-(IBAction) options:(id) column_name;
-(IBAction) has_many_columns;
-(IBAction) issue_notification:(id) info;

@end


@interface Column





-(IBAction) options;
-(IBAction) classify;

@end


@interface ArrayFinderQuery





-(IBAction) and:(id) field_name;
-(IBAction) in:(id) set;
-(IBAction) first;
-(IBAction) last;
-(IBAction) all;
-(IBAction) length;
-(IBAction) create:(id) options;
-(IBAction) push:(id) object;

@end


@interface ModelNotSetError: RuntimeError







@end


@interface FieldBindingMap





-(IBAction) model:(id) model_instance;
-(IBAction) field_count;
-(IBAction) field_at:(id) index;
-(IBAction) value_at:(id) field;
-(IBAction) fields;
-(IBAction) bind;
-(IBAction) textFieldShouldReturn:(id) textField;
-(IBAction) handle_keyboard_will_show:(id) notification;
-(IBAction) owner_cell_index_path;
-(IBAction) handle_keyboard_will_hide:(id) notification;
-(IBAction) find_first_responder:(id) parent;

@end


@interface String





-(IBAction) humanize;
-(IBAction) titleize;
-(IBAction) demodulize;
-(IBAction) pluralize;
-(IBAction) singularize;
-(IBAction) underscore;

@end


@interface Inflector





-(IBAction) initialize;
-(IBAction) reset;
-(IBAction) uncountable:(id) word;
-(IBAction) singularize:(id) word;
-(IBAction) pluralize:(id) word;
-(IBAction) titleize;

@end


@interface NilClass





-(IBAction) titleize;

@end


@interface Array





-(IBAction) titleize;

@end


@interface Hash





-(IBAction) titleize;

@end


@interface Symbol





-(IBAction) titleize;

@end


@interface SQLite3Adapter: SQLDBAdapter





-(IBAction) last_insert_row_id;

@end


@interface SQLScope





-(IBAction) table_name;
-(IBAction) select:(id) columns;
-(IBAction) order:(id) options;
-(IBAction) limit:(id) limit;
-(IBAction) all;
-(IBAction) to_a;
-(IBAction) do_select;
-(IBAction) first;
-(IBAction) count;
-(IBAction) delete;
-(IBAction) select_str;
-(IBAction) order_str;
-(IBAction) limit_str;
-(IBAction) options_str;
-(IBAction) type;
-(IBAction) execute;
-(IBAction) to_sql;

@end


@interface SQLCondition





-(IBAction) to_sql_str;

@end


@interface FMDBAdapter: SQLite3Adapter





-(IBAction) db_path;
-(IBAction) db;
-(IBAction) execute_sql:(id) sql;

@end


@interface SQLContext





-(IBAction) to_s;
-(IBAction) log:(id) msg;
-(IBAction) execute;
-(IBAction) build;

@end


@interface SQLDBAdapter: BaseDBAdapter





-(IBAction) to_select_sql:(id) scope;
-(IBAction) to_delete_sql:(id) scope;

@end


@interface AppDelegate





-(IBAction) setup_database;
-(IBAction) setup_window;

@end


@interface HelloController: UIViewController

@property IBOutlet id btn_hello;



-(IBAction) say_hello:(id) sender;

@end


@interface Fetcher





-(IBAction) initialize;
-(IBAction) fetch:(id) cls;
-(IBAction) do_something;

@end



